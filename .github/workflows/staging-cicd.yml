name: Staging CI/CD

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
    
env:
  IMAGE_NAME: "reyshazni/a8-staging-test"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo 
      uses: actions/checkout@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.USERNAME_DOCKER }}
        password: ${{ secrets.PASSWORD_DOCKER }}
      
    - name: Build the Docker image
      run: docker build --platform linux/amd64 -t $(echo $IMAGE_NAME) .
      
    - name: Build the Docker image
      run: docker push $(echo $IMAGE_NAME)
      

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Deploy to Digital Ocean droplet via SSH action
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME_HOST }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
            echo "running script in server"
            # Stop running container
            docker stop staging
            echo "old container stopped"
            # Remove old container
            docker rm staging
            echo "old container removed"
            # Login Docker
            docker login --username=${{ secrets.USERNAME_DOCKER }} --password=${{ secrets.PASSWORD_DOCKER }}
            echo "login succeed"
            # Pull image
            docker pull $(echo $IMAGE_NAME)
            echo "new image pulled"
            # Remove dangling image
            docker image prune -a
            yes | ./script
            echo "dangling image removed"
            # Run image and open port
            docker run -p 3000:3000 --name staging $(echo $IMAGE_NAME)
            echo "container started succesfully"
